<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='city home prices' inline='true' name='federated.1mzhade1knmcju107o7ni1bcvyz2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='city home prices' name='excel-direct.0mpba8s18f6jdm16rsgdi0swe2gd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/w6614/Desktop/OSU/2023 Fall Semester/ISE5760/Makeovers/City Home Price Playfair/city home prices.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0mpba8s18f6jdm16rsgdi0swe2gd' name='Cities' table='[Cities$]' type='table'>
          <columns gridOrigin='A1:D24:no:A1:D24:0' header='yes' outcome='2'>
            <column datatype='integer' name='CityID' ordinal='0' />
            <column datatype='string' name='CityName' ordinal='1' />
            <column datatype='integer' name='CityX' ordinal='2' />
            <column datatype='integer' name='CityY' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0mpba8s18f6jdm16rsgdi0swe2gd' name='Cities' table='[Cities$]' type='table'>
            <columns gridOrigin='A1:D24:no:A1:D24:0' header='yes' outcome='2'>
              <column datatype='integer' name='CityID' ordinal='0' />
              <column datatype='string' name='CityName' ordinal='1' />
              <column datatype='integer' name='CityX' ordinal='2' />
              <column datatype='integer' name='CityY' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0mpba8s18f6jdm16rsgdi0swe2gd' name='HomePrices' table='[HomePrices$]' type='table'>
            <columns gridOrigin='A1:E6601:no:A1:E6601:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='integer' name='CityID' ordinal='2' />
              <column datatype='real' name='HomeValue' ordinal='3' />
              <column datatype='real' name='Index20' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[CityID (HomePrices)]' value='[HomePrices].[CityID]' />
          <map key='[CityID]' value='[Cities].[CityID]' />
          <map key='[CityName]' value='[Cities].[CityName]' />
          <map key='[CityX]' value='[Cities].[CityX]' />
          <map key='[CityY]' value='[Cities].[CityY]' />
          <map key='[Date]' value='[HomePrices].[Date]' />
          <map key='[HomeValue]' value='[HomePrices].[HomeValue]' />
          <map key='[ID]' value='[HomePrices].[ID]' />
          <map key='[Index20]' value='[HomePrices].[Index20]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cities]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D24:no:A1:D24:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[HomePrices]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E6601:no:A1:E6601:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CityID]</local-name>
            <parent-name>[Cities]</parent-name>
            <remote-alias>CityID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities_181DB7CE05EA436C8AB6B2EE9A258AAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CityName]</local-name>
            <parent-name>[Cities]</parent-name>
            <remote-alias>CityName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LKO_RKR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities_181DB7CE05EA436C8AB6B2EE9A258AAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityX</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CityX]</local-name>
            <parent-name>[Cities]</parent-name>
            <remote-alias>CityX</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities_181DB7CE05EA436C8AB6B2EE9A258AAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CityY]</local-name>
            <parent-name>[Cities]</parent-name>
            <remote-alias>CityY</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities_181DB7CE05EA436C8AB6B2EE9A258AAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[HomePrices]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[HomePrices]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CityID (HomePrices)]</local-name>
            <parent-name>[HomePrices]</parent-name>
            <remote-alias>CityID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HomeValue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HomeValue]</local-name>
            <parent-name>[HomePrices]</parent-name>
            <remote-alias>HomeValue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Index20]</local-name>
            <parent-name>[HomePrices]</parent-name>
            <remote-alias>Index20</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='higherThanIndex' datatype='boolean' name='[Calculation_564638813302943744]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_913386306975420419] &gt; [Calculation_950541004611768321]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Index' datatype='real' name='[Calculation_950541004610785280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[HomeValue]' />
      </column>
      <column caption='YOYIndex' datatype='real' name='[Calculation_950541004611768321]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Index20])) - LOOKUP(ZN(SUM([Index20])), -12)) / ABS(LOOKUP(ZN(SUM([Index20])), -12))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[CityID (HomePrices)]' role='dimension' type='ordinal' />
      <column caption='City ID' datatype='integer' name='[CityID]' role='dimension' type='ordinal' />
      <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
      <column caption='City X' datatype='integer' name='[CityX]' role='measure' type='quantitative' />
      <column caption='City Y' datatype='integer' name='[CityY]' role='measure' type='quantitative' />
      <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cities' datatype='table' name='[__tableau_internal_object_id__].[Cities_181DB7CE05EA436C8AB6B2EE9A258AAC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='HomePrices' datatype='table' name='[__tableau_internal_object_id__].[HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527]' role='measure' type='quantitative' />
      <column-instance column='[HomeValue]' derivation='Sum' name='[pcdf:sum:HomeValue:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[HomeValue]' derivation='Sum' name='[sum:HomeValue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_564638813302943744]' derivation='User' name='[usr:Calculation_564638813302943744:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[Calculation_913386306975420419]' ordering-type='Rows' />
        <table-calc field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[Calculation_950541004611768321]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_950541004611768321]' derivation='User' name='[usr:Calculation_950541004611768321:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[pcdf:sum:HomeValue:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:HomeValue:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004619730946:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_564638813302943744:nk]' type='palette'>
            <map to='#308344'>
              <bucket>true</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#da323f'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cities' id='Cities_181DB7CE05EA436C8AB6B2EE9A258AAC'>
            <properties context=''>
              <relation connection='excel-direct.0mpba8s18f6jdm16rsgdi0swe2gd' name='Cities' table='[Cities$]' type='table'>
                <columns gridOrigin='A1:D24:no:A1:D24:0' header='yes' outcome='2'>
                  <column datatype='integer' name='CityID' ordinal='0' />
                  <column datatype='string' name='CityName' ordinal='1' />
                  <column datatype='integer' name='CityX' ordinal='2' />
                  <column datatype='integer' name='CityY' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='HomePrices' id='HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527'>
            <properties context=''>
              <relation connection='excel-direct.0mpba8s18f6jdm16rsgdi0swe2gd' name='HomePrices' table='[HomePrices$]' type='table'>
                <columns gridOrigin='A1:E6601:no:A1:E6601:0' header='yes' outcome='6'>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='integer' name='CityID' ordinal='2' />
                  <column datatype='real' name='HomeValue' ordinal='3' />
                  <column datatype='real' name='Index20' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[CityID]' />
              <expression op='[CityID (HomePrices)]' />
            </expression>
            <first-end-point object-id='Cities_181DB7CE05EA436C8AB6B2EE9A258AAC' />
            <second-end-point object-id='HomePrices_CA5D0000F01D4B3A80F7F4B2269D9527' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='2. YOY Homevalue'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.YOY Homevalue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;AZ-Phoenix&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-Los Angeles&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-San Diego&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]' field-type='quantitative' max='0.5' min='-0.5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='20.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5602209568023682' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk] * [federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk])</rows>
        <cols>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{3D7760F4-97A0-4D30-8C37-4EAF0ACE5357}' />
    </worksheet>
    <worksheet name='3. Index(Line)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3. Index (Line)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='YOYIndex' datatype='real' name='[Calculation_950541004611768321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([Index20])) - LOOKUP(ZN(SUM([Index20])), -12)) / ABS(LOOKUP(ZN(SUM([Index20])), -12))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column datatype='real' name='[Index20]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_950541004611768321]' derivation='User' name='[usr:Calculation_950541004611768321:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;AZ-Phoenix&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-Los Angeles&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-San Diego&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='20.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk] * ([federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk] + [federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]))</rows>
        <cols>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{CF64453F-D0C0-4C3B-ACE7-D3E35BFB1CFC}' />
    </worksheet>
    <worksheet name='3. Index(Opacity)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3. Index(Opacity)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='YOYIndex' datatype='real' name='[Calculation_950541004611768321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([Index20])) - LOOKUP(ZN(SUM([Index20])), -12)) / ABS(LOOKUP(ZN(SUM([Index20])), -12))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column datatype='real' name='[Index20]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_950541004611768321]' derivation='User' name='[usr:Calculation_950541004611768321:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;AZ-Phoenix&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-Los Angeles&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-San Diego&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='20.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='20.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4d4d4' />
                <format attr='mark-transparency' value='126' />
                <format attr='size' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk] * ([federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk] + [federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]))</rows>
        <cols>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{9FD19E99-1AC1-4014-AC56-D35BAFB88C99}' />
    </worksheet>
    <worksheet name='5. Difference(Index vs YOY)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>5. Difference(Index vs YOY)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='higherThanIndex' datatype='boolean' name='[Calculation_564638813302943744]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_913386306975420419] &gt; [Calculation_950541004611768321]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='YOYIndex' datatype='real' name='[Calculation_950541004611768321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([Index20])) - LOOKUP(ZN(SUM([Index20])), -12)) / ABS(LOOKUP(ZN(SUM([Index20])), -12))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column caption='City X' datatype='integer' name='[CityX]' role='measure' type='quantitative' />
            <column caption='City Y' datatype='integer' name='[CityY]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column datatype='real' name='[Index20]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[CityX]' derivation='Sum' name='[sum:CityX:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CityY]' derivation='Sum' name='[sum:CityY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_564638813302943744]' derivation='User' name='[usr:Calculation_564638813302943744:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[Calculation_913386306975420419]' ordering-type='Rows' />
              <table-calc field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[Calculation_950541004611768321]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_950541004611768321]' derivation='User' name='[usr:Calculation_950541004611768321:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]'>
            <groupfilter function='level-members' level='[none:CityName:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]' field-type='quantitative' max='0.5' min='-0.5' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]' />
              <color column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='134' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok] * [federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values])</rows>
        <cols>([federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok] * [federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk])</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;CA-Los Angeles&quot;</value>
                <value>1</value>
                <value>2</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-63' y='-14' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;CA-San Francisco&quot;</value>
                <value>1</value>
                <value>3</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-65' y='-14' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;NV-Las Vegas&quot;</value>
                <value>2</value>
                <value>2</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-84' y='-12' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;CA-San Diego&quot;</value>
                <value>1</value>
                <value>1</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-62' y='-13' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;AZ-Phoenix&quot;</value>
                <value>2</value>
                <value>1</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-63' y='-14' />
          </mark-label>
          <mark-label id='5'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;FL-Tampa&quot;</value>
                <value>3</value>
                <value>1</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-44' y='-12' />
          </mark-label>
          <mark-label id='6'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;FL-Miami&quot;</value>
                <value>4</value>
                <value>1</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-53' y='-14' />
          </mark-label>
          <mark-label id='7'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;MI-Detroit&quot;</value>
                <value>3</value>
                <value>5</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>false</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-46' y='-14' />
          </mark-label>
          <mark-label id='8'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                    <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
                  <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;WA-Seattle&quot;</value>
                <value>1</value>
                <value>5</value>
                <value>#2008-12-01 00:00:00#</value>
                <value>true</value>
                <value>&quot;[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]&quot;</value>
                <value>-0.18613829269611293</value>
              </tuple>
            </tuple-reference>
            <label-position x='-45' y='-14' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{B2693019-D5AF-45B1-BCA7-0F00E418ADDB}' />
    </worksheet>
    <worksheet name='Index (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='YOYIndex' datatype='real' name='[Calculation_950541004611768321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([Index20])) - LOOKUP(ZN(SUM([Index20])), -12)) / ABS(LOOKUP(ZN(SUM([Index20])), -12))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column caption='City X' datatype='integer' name='[CityX]' role='measure' type='quantitative' />
            <column caption='City Y' datatype='integer' name='[CityY]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column datatype='real' name='[Index20]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[CityX]' derivation='Sum' name='[sum:CityX:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CityY]' derivation='Sum' name='[sum:CityY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_950541004611768321]' derivation='User' name='[usr:Calculation_950541004611768321:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]' field-type='quantitative' max='0.5' min='-0.5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]' />
              <color column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='134' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]' />
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4d4d4' />
                <format attr='mark-transparency' value='152' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityY:ok] * ([federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk] + [federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_950541004611768321:qk]))</rows>
        <cols>([federated.1mzhade1knmcju107o7ni1bcvyz2].[sum:CityX:ok] * [federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk])</cols>
      </table>
      <simple-id uuid='{C39E2C6B-6BAA-4F69-8B06-EF592E5AEF3D}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]' />
              <text column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</rows>
        <cols>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{DC334BDF-99B0-405C-B53F-DE9A2EA9446C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='city home prices' name='federated.1mzhade1knmcju107o7ni1bcvyz2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzhade1knmcju107o7ni1bcvyz2'>
            <column caption='YOY Homevalue' datatype='real' name='[Calculation_913386306975420419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([HomeValue])) - LOOKUP(ZN(SUM([HomeValue])), -12)) / ABS(LOOKUP(ZN(SUM([HomeValue])), -12))&#13;&#10;// [[Home Value] - [Home Value](1 year ago)] / absolute value sum of Homevalue(1 year ago)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Home Value' datatype='real' name='[HomeValue]' role='measure' type='quantitative' />
            <column-instance column='[CityName]' derivation='None' name='[none:CityName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913386306975420419]' derivation='User' name='[usr:Calculation_913386306975420419:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]' />
                <order field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;AZ-Phoenix&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-Los Angeles&quot;' />
              <groupfilter function='member' level='[none:CityName:nk]' member='&quot;CA-San Diego&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</column>
            <column>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk:3]' field-type='quantitative' max='0.53549498053897748' min='-0.40227117985283728' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]' field-type='quantitative' max='#2009-12-31 08:24:00#' min='#2002-01-01 15:36:00#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk] * [federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_913386306975420419:qk:3])</rows>
        <cols>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{8D2A2D80-C4BC-4B84-B8DB-186712AED870}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D317893-0DBF-4F34-A92E-DF02E89C4753}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:Date:qk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[tmn:Date:ok]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB7FAE9D-E9E5-41FE-9092-A2B36DBB68E1}' />
    </window>
    <window class='worksheet' name='2. YOY Homevalue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:Calculation_913386306978197509:qk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F485ACC-C827-4AD6-83E7-0895922A64E5}' />
    </window>
    <window class='worksheet' name='3. Index(Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:Calculation_913386306978197509:qk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6073DED9-8D72-45C3-AACD-60CFE6D1C3BB}' />
    </window>
    <window class='worksheet' name='3. Index(Opacity)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:Calculation_913386306978197509:qk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2554F639-CC44-44A0-B4DA-2F2D8A4EC2DF}' />
    </window>
    <window class='worksheet' name='Index (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[:Measure Names]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:Calculation_913386306978197509:qk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B97707ED-B138-4D5B-9F74-2532B9E6F45F}' />
    </window>
    <window class='worksheet' maximized='true' name='5. Difference(Index vs YOY)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:Calculation_913386306978197509:qk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[none:CityName:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[usr:Calculation_564638813302943744:nk]</field>
            <field>[federated.1mzhade1knmcju107o7ni1bcvyz2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87717E80-238F-4FC6-869F-185C6527D354}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2. YOY Homevalue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Index(Line)' width='192'>
      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
      Vmp7f9rtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3. Index(Opacity)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2913NcWZ7n97nepEcmDAGC3pvyrqt62oVauyNpFStpFCET0srvw0YoQv/B
      POlBL4odrULSSFpp5mGkWfXMSts93bVdPd3V5brLs+gNLOFt+puZ15yjh0QmgSqSBbKAJFi4
      HwbJi3t/ec4vL873eKNIKSUxMfsU9Uk7EBPzJHlqBFCtVp+0CzHfQp4aAcQ1tZjd4KkRQEzM
      bhALIGZfEwsgZl+jdy6q1eqermd7nvekXYj5FtIVQCqVepJ+bIt0Ov2kXYj5lqF/vUlMzN6j
      2WwS+AGWbWEYRve+oiiPFE4sgJinhiAI8H0fXdeZ+vQOt37+OS//Zz9i8c4sK7fm+e5/8Xe6
      tq7rbksMcSM45qlhdWaZX/23f8Xkx7e23A9rLZrLNQA++D/e4t3/+RcIIbYVZlwCxOx5Go0G
      qrrNvFq2/3o1j8pSkWQ+TSaffaB5XALE7Hk++LO3+OJvPnykz5SXi3zyZ2+zcHOGIAhoNpuE
      YfgVuz0lgJvXLnPp8lUiIUEKLn30HovFuPtzPxKGIa1WizAMEaFARo/fRT/xyS3e+u/+mpWZ
      pa8821NVIMN2SZsqrVBSWZxEaBb1eoMobSGEuK+CY76d3L06wfWffcqFv/8K0J4L1qnXCynp
      NG+lEHSGr6Io6n5ebthKIZACRCtERBHNZhMpJbquoyjK3hJA2Gqw4qmksnWSfQPkfR+pKmia
      hqqq6PqecjdmN5EQNQKUjcStKEq3HaAqCmz08Ciq2rlE07Tux5UNW0VV2+0CQFVVrv7yE5av
      zfH9//rfIJFI7C0BnD53ccvPyRNnn5AnMU8C3/eplaqYtrVrcUR+RFBvdX/eU22AmP1Ndb3M
      u//4b5j4/Y1djyuKIkprxb1VAsTsP6Iool6rb7+bc4doNpv87h+/2bsSQErZ/RsT0yEIAt75
      k5/x+V9/8ETi71kJcP3SRyzXQ4by/Zw9e6pX0cbEPJSelQC6YTAzdoOG0L7eOOZbz7V3LnH5
      159ue8rCbtEzAShSkMnlEXEVKAZYuDLN3KcTT7xK3LMqkO0kyGVzNL1ar6KM2WOszi2zcGOG
      9HDuSbvSpSclwPriNJeu3WRxaZlsX18voozZg1SXS0z85hort+eftCtdelICpPMHePXlF5m6
      O0/KtR9oV1xZpB6qjBwYIGw1mL47w+DBw6Sc3RsYidldwjDko79+B8OxKBzsf9LufIWeCEA3
      TCYnJ1ldX0VoDoeHB+5rt1wsY2kKftiPgsLQYJ6FxVWSR4a3zAWJ2fvcvTaB77UYfeYYpclV
      rIxDfpMA7lfz39Ic2PhBdi3vdaFL6M4FQm6y2BxA53rL869G3LM2wNCBEWzbJjs0/ECb9nwP
      BQkI32NuucKJY0fuffG4Ab2nEUIgpURVVaY/vkNtocTw+cPth7L7z6afN/9O5aZEv8lSbv7v
      XqL+0uMvhcUm2Wwx+IptzwTgWhqXJifoEwmOjNy/KMylEnihimjW8LwmImxRqtTIZ1MoirJl
      slPM7tFJyIqidKck27ZNq9VCSonjODQaDRRFwXXdru2tD64y99kEr/xHP6STR3eXJSobE9d0
      FUVTUXUFVVc3LVtUUFSlY9q93/0fBUVR793b9LwTwubR5C2f70yoU5Vu0dF53jMBlNZXcHIH
      ef78iQfa9A+NdK/dZIrC4INLi5idJQgCWq0WmqbRaDRoNpvYtr1linGtVuvOyqzVakgpqayX
      mbt9l4OnD2NmbFLH8iiaSupwDj3Xbrtlzwyg2wZm2qbwwkHcA2mEoyDCdti580O4uSSKppI+
      XsDMOmiWjjOUQjW1jQQPqq7iDKXQHANFUdrPdRWrkCB9ogCAO5xGhKJrq9sGYTMA9f7rg3sm
      gGLFw7ZVbl2/wUsvPd+raGO+hqWl9iIRwzC6iV3XdQzDeOii8uXJBVRdJdfXR3O1hjgWIUJB
      1Aja9W4hoTsnX4KQyKj9XAQRUStEBGH3uRTtUkR3DVRdRTU1nP4kqqGROT2Am06g6CpOfxLN
      as/ld/qTbVtDQ3faO0Nolo6iiXu2to6eMBl4+RC6Y2IkLZzBe1sA9UwAh0dH+eDjzxh97Vyv
      onwilEolpJQkk0lqtfaYRyKRwPO8LWsaDMMgCAKgvYPBbhCGIb7vo6oqQgh838c0TSqVClEU
      kUqlEEKgKMoDOxg6C5Esy6K0sEbQ9Ek9e5r6UhndNsj1oFs7agUI//EXQ4lIEHo+Usi2APqT
      AKSO5r8qAK9WRbcTeJU1ShWPweERbANmpmfJDQxhagqW9ejdkhMTYyRTGUK/9fXGe4zOKiLT
      NPF9H2gnrmaziWVZNBoNwjAklUrRbDZRFAXf92k0Gls+J6UkiiJ0XUfTtO49gHq9jqZp2Lbd
      TaiapiGEQNf17mq4zrWqqkRR1LVtNptEUUQikegKr2OrKEr3WkqJpmlomvbAHD4MQiprJdL5
      LKXZVZbH5rn445fw1ms0SnV4tgcvvQcYSfOrApiZHsNMDzM61MfK0jJSURBhFa+hUp2cRPge
      bm6A/ozN4lqVQyMD3J1Z4NCRY9jmgxupCsp9u772Eo1GA9/3MQyj2/hLJBKUy2UURSGVSnVz
      +EQiAdBNjKZpbjueLzfwOlWPKIq68Uop2+thhUDTtG5p0amqKIqCYRhd281hdJ53cveH0aw3
      EGFEKptm8rPb5EcHsF2H+S+msF4+/aUumW8fW0aCReCxtFZnYWGWRq2Imx+mVVphvVJneWGe
      RCaLm85hiJC55XUG0xaffXaFZqtBsfLwKQ6qptBqNgk2Nap2CyklpVKJUqmEEIJWq4Xv+92G
      XhRFVCoVyuUy5XKZ+fl5lpaWaDab+L7fzU2Bbg66OdE+6u5j3wRVVbtxduLt3OuIREqJV66z
      NDGPiCJWpxaZuTKBCCMmP71NealIo+ox+eltGhWP8lKRyU9vE4URxallFq7eRUqJX2kSfYOq
      xtPIlhKg4TV5/uVXaFXWmV1YRlENskeOkTECzlxIMTCQZnV1DQ2JHTaZXa1y5vRxFpbXcC21
      vYBdRKRTya9ENDJykNXKxK7VdzcjhOj2UhiGQalU6najdqoqnud17xmG0bMxBiFEN4fe3MPS
      udfJzTVN6w7+KYrC2uwyAP2jg0xfGic3UsBJOEx+epsjz5+kWfYoTi4zcmKUwPNplRtICa2S
      R1QIEE5Eq+QhwoioFdAqee3G6T5niwASmXaDJuUMURgc2vTEYGBj8LZQyHfvDmyY9BXuP7K7
      mbmFJc6cOcHC7CxHhwvfzOttMPvFBIqq0ve9PqY+vEXmQB92wmHpzhxnv/csazPLNCseoxeO
      cffyONkDfSSzaWZvTHHg5CitRpP12RWOv3CatbvLNKseZ167yOLtWRRVYeTUYVZnl8gP9+M3
      W1TXKwwfH6W6ViZo+iTPJNu2mkL2hSx3vxgnVchQXS3TqjQ48fo57n56ByvpkHz+NOPvX6dw
      dIhUX5rJT29z+LkTNKp1lscXOPH6OUrTq0gpKYwM0izWCfMZcB1kKL7VVZTdpieT4Rq1Eplc
      nvHxuxw5euSBdmHg02y1G5lSSrx6/bFzZhGKbj+z8CNkJJCRQATte36tSWO9BlLSWKsReD4i
      iGis1RBBSNgMaKzVkEJu2NYBaJY8WpUGYcNnbWwRv96kUfZYG1tEhBG1pTLrE8v3bMuN9jtY
      qxF4LUTHBwkiaPskARFs+Chk+3qjK7FjG7M79KQbVApJs7KKMJPoD5Hc7Vs3iaTCmfMXKC1M
      U/R8DCfL0YNfX8LExDwOSi/OCV6eGePXb79DJdR57fU/4JnTR+9rNzY+hmOo5IaOsDozydDR
      Q8xMLHDk6Ai1Wo1EItGtHwPd+nGn7tyZhyKlZH15DUVRSPdlKK8WMSwTTddo1hsksymaXpPQ
      D0n1pamul7EcG1VXaVQ9EukkrZZP2PJJZtM06w3CICRTyFJea7cnEukktVIFO+kihaDlNUn3
      ZahVaohQbLFN5dJU1koYlkkURogowkknaFQ9VFUhmW0/txwbVVNp1DwSmRStZpOwFXRtkeCk
      XRqVOrppYDs2tXL1Sz5kqZWriEh0bS3XRlFVmjVvw1bS8hokc2kaNY8oiEjl0lSL5S0+JDMp
      mo0moR/csw0jMvn2d1NVFSfpUi9XcZIuIhK0Gpt8EGKLrWmbNOsNTNsi8AOklO3nqyVUXSWZ
      TlJZL2/xN5lNUa/U0Q0dwzLxKjWcZDsd+I0mbjpJ0PIJWj7pfJZqsdIeh8mmqBUr2AkHaPd2
      pXIZ6rU6IghxM0m8cq03AuhE8XW9J5Njt2iEKocODiGCJlMzCxw4dJz+bIJKpRIfkBGz4/RE
      AKtzk3x2Y5LzFy6Qy2ZwH2Pjo1gAMbtBTxrBhmkStDzu3LrF8lqpF1HGxGyLngjAdJKkEzat
      IKJ/UzdqTMyTpicCmJu+zaEzL/LGKxe4/MWVXkQZE7MtetINOjg4wq/eewddgTMvfKcXUcbE
      bIueCKDZatJXGOS5Zy8+VgM4Jma36EkVKJnOUV+f551332NqfrkXUcbEbIuedINWiqtoToaE
      bXy98YPCiLtBY3aB3uwLlNv9yW8xMY/DnjogY/zWda5ev4mQEq9a5MaNa9ydX33SbsV8i9kT
      B2SELY/Z5RJSN+lzVZqBxElmSVgr2LZFFEXxIXkxu8KeEIBuuRwZdbl2+XOqVZVUzmNuZobF
      SsiJfHxIXszu0ZNG8HaRUiCl0t7zSMr2cZiqiqoocSM4ZlfYU1mqotw78hJFId4HLma32VON
      4JiYXhMLIGZfEwsgZl8TCyBmXxMLIGZfEwsgZl8TCyBmX9MdB6hWq3v6CCLP8560CzHfQroC
      SKVSD7PbE8QjwTE7TVwFitnXxAKI2dfEAojZ18QCiNnXxAKI2dfsKQGU1paZX1rtbodfXF3C
      a8WrwGJ2jz21HmBxtYilgZ/Po4kGkxMTHDiexNk4fG8vj1PEPJ3sKQFoqoqutU+TXJidIYhC
      1oolBnNO97ysmJidZE8JIJOwqYcqolnjwJFTDAwNEyh291TEzsEYMTE7xZ5aE/ww4jXBMbvB
      nmoEx8T0mj1VBYrZG6zMLjF3dZqRi4dpVDzWp1c48fpZkum9P1/sUelZCVAvrzI1M0elWu9V
      lDGPQKvZYmF8luLKOrW1CtPv3qS+WmV9eoXpd2/iN30+/ul7/Pb/fBPf95+0uztGzwRw5doN
      ZqZvce3ajV5FGbMNfN+n1WpRK1f56J/+mrufjj3QtrFaozpbJAxD3vuLX/HhP3+nh57uDj0T
      wNHRYZYW1xk5erxXUcZsg49+8g6/+R9+SvAIubqUkursOrXFEmsLq1z/7SXWF5/OPVx7JoCW
      7zPQ38f01HSvoox5AAsTs9x8/0r7zFw/JGwGjx1WZanInV9eprJc6obr1Z6eam7PBND06pTK
      NTLZTK+ijNlEZ3NhIQTLd+a59fPPadWbOxrH0q25driNFtPXxrnz8Q3CMOz+3Yv0pBdoeWaM
      y7emehFVzCaCIKBeqWFYJqt3l7j+s08496+/1JO4pz68Q22hyPC5Q/zuz3+FmbS5+HdfZm1q
      iUQ+zYFjIz3x4+voiQAGRk/wXKXG59euE0QPns4wfus6jUjl3NnTNGslpmfnSWQGOTQcH7Dx
      KMzeniZo+CQHMnzwT97k8B+cJnsgj19uIsKo5/74lRaKolKaXeXa//sxIy8fw2+2kJHg0Plj
      qOo3q4h0psgoikK1UgUg8FqMv3+dAxcPUzg0SNDysV0H0zS3fLZn4wD1UJJyDLxK5cFG8fkA
      j4Tv+wS+j2GaLI3NsTq+xMnvX2Dig5tUZtZ54R98DwApQch2IpFCdicVChHRmXorhNywlciN
      ayFF+8O0E1lnysDmOVmdcIUQ3XAjEdEJuGsrQWw8l8DtX18hbPgMHB9mZWIB3TEZPHzgsd7D
      F7/8mNVb83znP/8xH/75r4laIef/3kssfD5NajBLbbnM7Te/4KX/9AfU16tU5ouc/fHzWJbV
      OwEkTQW3b5QXn7vwQJtmvUrlKTwfoNlsEkURlmUx9slNGus1zv7oOW69ewVVVznx2jmu/+pz
      MiN9NGsNWuUGR187zfSnY1gpm2MvnGZ5Yh43lyRdyBIEAYZhUF0rU1+vkhstMPbBDZCSkeeO
      8vk/e5+R546SzKX44i8/4Jl/9ztUlkrMfzLB8dfPdP3q5KyKAqqyca0qKBtbcKuqBkrHVtmw
      VVA2rlVFha6t2jHdkmN3wu3M1wLQVI1OwF1bBdSN5wrdYJFScuWff0jmUIFUPsOdd69SOD7E
      4XPHvvKegyDA9310XWfm6gTj793g2b//GpHn01ytb5krpnS+u6p2Ra6qKsW7qyxemubEDy6w
      NrXUOwE4jkt5ZYzPrqX47ovn72tz7uKz3fMBkkdPc2DjfIC9gpSSRqMBgFesMfPFBMMXDrN8
      e46Jt6/zxj/6Q1Zvz1OaWuXU9y8y/8UUum1w7JUzzP5+jOiFI9RWylRnigw/e4T5TydJDmU4
      cHqUz//iPQ6/cZrcaIFLf/k+z/zRa1SXy0z+9gav/MN/hflPJ5BCcuDiYZrLNULPh9zufE/d
      MUgd6UNzdJxCgtyFIVRdJXEwi5pqH3SYPtmPbhloHVvbwMw4pI70oagKRsrCbLoAWDkHM2Gj
      uW1bK+fihD6mH248dzGSFkGzxezvxzAsg+WUy9yVKQ4+e4yg6WNYBqEf8tE//VtO/+HzADSX
      a4jw8WYI+77P53/xXg+rQLUaQ0dOMzzw4Pr8Xj0fYGV2iaDpUzg0yLv/yy/QLJ2T37vI3fdv
      kxnKtWsJOzSlUG7806spinrCwsw4KLpK7vwQdiGBoqkYKQtF65QgG78U5d7nOrm4umGr6iqq
      qWGkLFDA6nOQWvtLOAMpdNu4Z2tqaI6BorcDdA+ksfocVEOj/5VDOENpWs0W1VIFv9Vi8rPb
      JPtSDJ85TO7cEGbGBhRy54fQbZ3EoRwDZjuu7JkBRCTQLJ3c+batDAXJwzlU46spqmfZa7lW
      Z/LW50zOLPQqykcmDEOazSZhGHL7o2v85k//hvXlNW795jKf/sW7BEGAjCQyeiom0D4QI2WT
      PJRD0RTsfILEwXbXtKIqWxL5N0LQVbGUD1d0t90hIWoEyDAChW5VTHcNNEvfck/ZdC2CiNBr
      j2VErZCoGXZtFUVBMTTMtI2iqjiDKXJnh7px96wEKOQyjE/b9A8O9CrKbeH7PsWFNaykTWW5
      xOX/53ec+zdfolVpUJlee2CviaIpGEkLRVcxUxaJ0SyqppI6mkfLWgDkzg2h6u1cp/+lURLD
      WaStoCVNVF0lfaKAk3FRlHZYqvn4ZZ5mahhJCxQF3TYwkiaKppA9O4jdl8BIW/S/NIqZtvFD
      v52LKgoIgXxIz9y3DUVRULS2cPpfGt0qACkjxm7fxk71kU8ozJcEJw4PIUXE8soqg4ODjx3x
      6nqJEydPkHCsb/YNtoGUkiBo5wiqqlJcWsOwTDRdo1lvkM5nufneZapLJU7+6Bl+/6dvMfqd
      kxSODhK1QmQkUXUN3TVBUXCH0oiN4jx5pA9VV9Edg8ypArprEkQhVtYBpZ0bRRvrmIUfwUaP
      StQKkWGEoqmo+kbDUVdRtHajM3OqgNXnYqYsCi8exMzYWGFA5vRAWyzHC0jZFl7m9ABWn4uR
      sim8eBAjbWPKkMypAoqm4gylwFEBpR2HqiCFbPsgnu7SayeJWuFWAXjrS9h9w4z2Z5gYGyOS
      Er+VJYwElVqNrKNzY3qBVCrJ6vwix89doJBNbiuyUEgyroup737NXgjBO//7myi6ymv/wQ/5
      4H/6JUPPjuLmUkz85hpv/KO/S3WhRHFiGX4E7kgGM22jJy0KL7QTnzQge3YA1Wgn0k79UdU3
      ErAEEYgdqaxL2mHJSCCFRPgRUkgUTUHbKBVUQ9voZmzfUzS1fZDghsikkG1/kMhIIILe9/c/
      jWxpA5iOS219mcXlFUqlIvVSkbWKRxBGrCzMMrewjuM6qIqGbUhKG4MO2yFtKfyL/++nLKw9
      ZBxgB0mOZkmMtOu2mZMF7P4kVtYhc7IfRVdJHs7R98wwigJ2n4tm6yBkO+FIiYhEO3HFGea3
      mi0lgOFmOXs6C8DQQP8Ww9e/+/2tnzw8+kgRlZuCf/Af//uMTy8Bhx7d00dERAJFbvRLW3q3
      uqHZOoqitHPbJzAqGrO36EkvkJSSo4dGuXL1BkeOn+hFlDEx2+IrAlianabitR76oZXVR5v7
      vb44zUcff8TiWplq9cHVponbN7h64xZCQr20wuXLl1ku1h4prpiYR0H74z/+4z/efGNhYQ6v
      EVAtLTM3M4tUVCanpmg0GyzMLeC1IiqVErXSGotrZcpri9Rbkkwq8cBIRBTgVYuEZpqjh0ZI
      Jdz72q2XyqQdHd3JsLawxNEzJ1iZWyaTSXWHwDu9O5un90opiaKIKIrafcpS0vAaOOkE6XwG
      3/dJ9qWxky6KrpIuZBBSYjoWmYE+wjAkVchgOhYSSWYgBwpohk66P7tha5Lpz+H7Pk7aJZ3P
      EklBMp9BMzRUXSM72EcQhliu9SXbDR/yaQzbxErYJDd8cDIJUrk0QRCQKmQwHBMJZAZySEWi
      mfomW5dkXxohBG4ugZtKIKQgVUij6TqqoW18n6Adx4ZtqpDBsA2kAsm+NLqpo+oa6f4skYgw
      EzbZ/hxhFJHMZzBtE6lAdqAPgUQ3N97Dhm2mP9v+bpkEqb40QkqS+XT7PRgb7yEIsBIOmf4s
      ge/jZpI46QQobLwHAzvlki7cCyu5+T1YJiiQGcwhpCSRSWIlHIQQZAayG1ValVQhg6K2u34z
      A+13bqdcMoX2d0vmM+im0e4SHswRigjDMUnlMwghtm6LEtTX+ejyOIqqcmCoj8GUwfWZOmdO
      HmT65ufMVXROHjtEq1lhcWaGgYNHybg6xZrPhbOnHigAr1pibnEFgFxhkELu/tubXL9yiUCo
      HD9xHK+4wkrVI5Ee4MhIId4WJWZX2CKAVsNDNWzClkeIimso1Ooen33+BaPHz+AoLZzMAKYm
      8Rs1GpGGrQQEmsNQ4cETU1bmJpkvRzxz9vi9YfX7EEUhQipoSnsSU2dSmKIosQBidoWv3RhL
      iohGs4XjOA9NvA9DhD5v/eyvWfNNnn/xZc4ef7QeJIg3xorZHXqyM9zq/DRLFZ+B/gKFvhyP
      o6NYADG7QU/mAoW+x+zsEutLMyTyo7xw4WQvoo2J+Vp6IgAhBKbjkjQjoniH55g9RE8EYNgJ
      Um5IYWCQkeHHn1AXE7PT9GQkuDB0kPXp67zz/gfcmpjtRZQxMduiJ43gldlxFuoqF08dfawG
      MMSN4JjdIT4fIGZfs3dWnANL8zNM3J1DAq16hZs3b1CseE/arZhvMXtqn5GK18TWFVqBxLBd
      RgbzrJYqZJJ2d75PTMxOsicEELY8ZpdLRFFESHtblEalyHIl4NihYaC9lvOb7iAWE/Nl9oQA
      dMvlyKhLeU2nHqpEzRpBJAkaVdbLNfLZ9skkjzsVIybmQcSN4Jh9TVyniNnXxAKI2dfEAojZ
      18QCiNnXxAKI2dfEAojZ18QCiNnXxAKI2dd0R4Kr1Sp7eUzM8+JJcTE7T1cAqVTqSfqxLeKR
      4JidJq4CxexrYgHE7GtiAcTsa2IBxOxr9pQAhBBbTyHfdPp4TMxusKcEcOPaZb64fJVQSJCC
      z373DgvrcfdnzO6xJ1aEdbDdJDlTxQ8l81PXaQqFYqnMYNbungcQE7OT7CkBEPmsVzXSuToH
      jp0l07dMS8ugaRqqqqLre8vdmKefeElkzL5mT7UBYmJ6TVyniHkoc2MzlGfXOPziSQzLAOie
      2vNtoGclgJQC3/fj7dGfAtaXVrnx3mXWl9ZYGVvgzluXaTWafPSTd/j1P/kpzWaT2x9eY+yz
      W0/a1W9Mz0qALz75HaWWJJ/JcfHi+V5FG7NNfN+nVqxg2hblxSK3f3EJJ7X1NE/RCgk9HyEE
      47+9hpmyGTkzSqPq4aQSOK7zhLx/fHpWAmTSGeanxlHsuCG7F6mVqrz7Jz9n/Hc3Hulzi7fn
      ePdPfs7S2Bz1ao3i6nr3KNungZ4JIPCbJFNpavV6r6KM2QYzt6aZuHR7R8ZY7rx3jXf++59R
      K1WpVqpUSuUtI/t7kd72AikqYfDwU+hjdp/OYeJSSiZ/d4PrP/sUscMbD3/2k/d593/8Oa1W
      i+mr48zcmtrR8HeKnrQBVmbHuHJ7GoB0OtOLKGMewvV3v2D2swle+Q9/sOtxCSG49jefYmUc
      TNti9tIE2UMFjj9/etfj3g69OSJp5Dg/+oPXyOf7SDjWA+3i8wF2D9/38TwP3/cJGz7NlRpS
      9HYM1FuvMvvROMXplZ7G+zB6UgIoisLtiWkUfNZXVzl+6MB97b5N5wMIIbj1/hUUTeXEK2dZ
      nV7CTNokc+2lp7qu7/p27535U6qqMn/zLld+8nsu/DuvdmfYCilgQwNi455Efun5xn0hOqZb
      6vUd206V6t5zudVWbo4DFibnkEIycHjoiY4p9KwbtC+Tpm5ZDI4eeqDN03o+QBAERFGEYRhc
      +pcfUVss8fK/931mPhlHtw0OP3+CT/7sbQ48f4R6qUpttsir/+WPiVoBmqHTf/Cbn5zp++3u
      ScMwmLx0h2bFY/DMCB/+6a849Ppp0oNZpJAoG39gY7v5jbTXSYQPfK6qncstv4dO2lVQ7oWh
      KHQ+2LVVNscBV3/+CaHn8+P/5t96or/XnglgaLCfn/30X7DumxwoXLyvzYFC354+H0BKie/7
      ANSLVeav32Xo9EEWb80y+d5NXv+vfkxzrUZtrrTlc8q9VIIMBSIQRFHEZ//XeySHMlj/9nf4
      /K8+YOj8KKMXjlFdK5PqS2M6FkIIdF1H0zQAWq0WxYU17JRDvVjlzttXOfG98xTvrjD1wW3e
      +Id/h4Wrd6nMrNN/ahgRCKQQ3UTNvbR57969WwCouoqRslB1DTNlkxjNoqgKVosxL2cAAA1A
      SURBVD5BgnaO7h5Iozsmiq5hpCwUXUWz9Pa1ev/fUydczdLRHQNFaQv3k5+8S7I/zQt/+J1v
      9gt6DHomgJmpMQ6cfJ7nzx1/oE0mP0CniewmU+QKA71x7muYvDxGs+Jx9KVTvPu/vYlqapx4
      /Tzjf3sVN5tARALRCnncaYUiEpQnV8kO51mZWuSL//t9Lv7Ra9SLVaY/uM1L/8kPGH/nGlJK
      Tv7gIh/+r7/i8HdPkx3JU55cJXjJR0QS0Qrp1mkeEUVTSRzMYqQsdNckfaKA7hhoDR0r66Co
      CrprYPjtNpyRtNBtA9012raugZl1SJ8ooKgq6WN9mP3tgbG+C0PoltEN18onSCgRURghpcTI
      2qgJA8/zqNVqGIaBbdsEQYBpmqiqiqIoCCFotVrdWcFhGGJZFvV6HSEEqVSKSqUCQDKZJAgC
      dF3HNE2EEGia1s1IOvRMANVmhCaq3Lx+g1dffbFX0T42i1PzlObWOHjxKHNfTFKcXOHQ88eJ
      muHjprFHRoaCqBEghaQ0uYIUEvn9bx65qqtojgEKpI7k0XM2KGDlHDRbb9fnw22uxhNtP5G0
      /Qvb9X8RCITfHluI/KhdzemEGwlEJJBhtPE8RAQRrUaTO+9eZeD4MIXDg4RhSBRF1Go1dF3H
      dV183+8OtHVWDAZBgKIohGGI7/soikKj0SCKIoIgwPM8wjDEtm10XUcIgeu66LreOwEcPjjM
      2+9/xCvfu3/1Zy+wOD3PxPs3OPzKKdanlpj4zXUKR7++fq5qKqqloyjgDKURWjvhpA73oert
      HCdzqh+7kCAQIVEkUFQFZyiF1ec+LOhvhKIquMOZdm7tGmRO9aO7JlY+Qe7cIKquIsMIEeyR
      zgUJIoiQQuA3W6wvrJEf7kdV1W/UTlAUBU3TUBSFer2OoihEUdSuXn7Zg9WlBQLVpj9tU/Yi
      8rkUUkrm7k5ipQr09z3eVIbJqSkOHT6Cyt4YGez0KHl1j2u/+IT8iSEs22Ll2hyDpw9usTWz
      Du5gux1i9ydQDQ0jaZJ/bgQjbWPrkL94AFXXUHUV1Wy/VtVo/wygWXq3DmxHUbtOnXUwkiaq
      ppJ/bgRnMInuGKRPFjASJrpn4h5Io2gKzmCq3YhVFdwD6Y1EbZI+2a5+OANJ8s+NoOgaqcM5
      9IwJioKdd9FtA1QFzdJRVKWdA/vRY1fZeoFfb7F6e550Nk1A2O6Nsu0dC79TimwRgF9dZ82D
      YwdTLM5OU2pBPpdCtEoslUPODhjMz0zSFAaW4lOuB5w8dQpD20bjVAoazWZPljUKIbj05oco
      msqZ7z3DlZ9/TGakj0PPHCPwA5yEy2c//YDy7DrP/tF3WL46i5VycE+PkD5eQE+Y2FqS/LPD
      7cSeMLs5tZlx2olagoza3YQiEkSt8LEX8EvaYXUSeCfB6o6BXUigKApWzm2HryjYhQSaY3Rt
      FVVtVz+idvVDirZP3xYWb8yQyCRxzrqsL6yS7stgPmQ86VHYUq6EgY/lOOi6zsLSEqXlBZZX
      V1irqxwbTnNrbIparcb83Dy+VBjsc2kE23vRlmlSr9VoBbsvACkl9WqderWGEILS/Dr1Uo2p
      S2P8/s9/TWWthJ4wMbMOiqbQ//JoO6fdaOipmtKuB/d4oCjm4YStgOXrszRKdRqVOnM3pgla
      Po2qR2lpHYBasUp1rQywrQxpiwDcviGorzAzN8ex0xd59ZXnsewUhbTJwkqR/v4ChmFSKBTI
      ZrI4iTTWdnJ/IJvLoWkqum486vd+LDRbR7PaBZzTn8BImuhOu6qgaCqqqaE7OkgIvWDv1INj
      tkXg+VTni4ggorpUYunaDADFqWXWxpfwGy3GP7xBdbWM3/QpLa8ThVG3YdzhS20AhSPHT225
      0+mWPHf27MZV/2M5vL5eJJ/vo7i+BkfuPxIcE7NTSCEJ6z4yFDRKdRav3CWTzbI2tURpdpXT
      P3yWiY9u9mYuUHl1AV/qlMs1BgceLKBGvUqxUmt/ASlYXlomiqshMTuJpNuNHdRaXxJAs8Rv
      f/cxl6/epLS+ThBFrKysIKRkfXWZeqNFtbxOvfFoU5rdVI7Dgymyw0cYzGcfaDc5fZflubv4
      kWTp7iSBCJiaWXzUrxgTs222bovSLHJzOSArS6xVwLBDlhdXSacypAaH8YpzCOGiqhHnzp1l
      uxMTlmfG+M0771OPNF569Q2eOX30vnZj42M4ukLf8FFW704ycGSU2alFjhwZoVarkUgkiKKo
      O5onhEBR2nNQOpOxVFVFSkmtWkMBnISLV6u3J59pGn6rheXYhH5AFAmchEOj7mGYBigKQcvH
      dpz23JoownZsgg1bN+ni1T0UwHYcGp6HYZkgIfB9nIRL02sgJVtt3XYcuqETRe2pCaZl4bd8
      FOXe8wf50LEFMG0Tv9lC1VRMy6LpNR7oQ8fWME2g/Xzzte06+C0fseU9mKDQ9qH7PNpi6yZd
      vJrX7sq1N/sgu71sW97Dhq2u6wS+j24YRGG49fmW93DPB8d1aDaa7VFcXaPVbGHZFmEUEQUh
      pm0hoogwCO/FCzibw2LTu2k02+/ftvCbrS8JoFXm3c/vkM9mSBsaiqNTLNUZzKWYW6sAEYof
      ortJzp05uW0BhEGAquuoXzOXZ2ZqHC9UOThUABEyOT3HyNET5JJ2vC9QzK6wrY2xIt/jzvg0
      2f4hhgq5R46kuDTDx1/cYGh4lAPDw/T3PfqimFgAMbvBtqZCaKbLmW4v0KMjZYQfRjzhyZwx
      MV+hJ71AiVQOUwkZH59AN3dmBC8mZifoiQCmJ27x3Bv/Kn/vD3/IzWvXehFlTMy26Mls0NFD
      R3nr7TdRUHjm1T/oRZQxMduiJwKo1ao4iTTnL1wkl9m96b8xMY9KT6pAlmXjN+rcvHGNxdXS
      138gJqZH9OR8gKZXR7ccdO3x9RZ3g8bsBj2pAtluohfRxMQ8Mntqn5Fb1y/zxeVrRFLiVYvc
      uH6VibtLT9qtmG8xe+KAjLDlMbtcQrNc+lMqrUC21xoYS2Szqe76zfiQvJidZk8IQLdcjoy6
      3Lp2meW6SipbZ25mjrV6QEZE8SF5MbtGfEhezL5mT7UBYmJ6TSyAmH1NLICYfU0sgJh9TSyA
      mH1NLICYfU0sgJh9TSyAmH1Nd2i1Wq0+9uauvcDz4sPyYnaergBSqdST9ONrkVJ2R4KFEN39
      4jvXHfF29n7fvHfQw2zv93wnbGMfdt6Hr/v8g8K6nw/dPaW+jVMhpJR74jyx2Ie978NT3QaQ
      UhAE7X35w7D9v4gihJRIIQg69zY07jUaPfEh2vBBiKjrg9xtH8Kv+tCO8971k/JBbOzILKXY
      VR9EFBFuxBlu8gVAiPaz7rGtwsdrhntjNujjUlpbYWlhHtXN0PA8XDeBVy0jNZOR/gzLC7Nk
      +wfxrUHmr7xNlBzme688u7M+rC6zuDiP6mZpeR5uIkG9UgbdYqQ/w8LsXQpDgzTtYWYv/S1K
      +iDfffmZHfWhuLrM0sIcaqKPVsMj4bpUK2UU3eLssWF+/cHn/PC5wyyqI0x/9hZa9hBvvLSz
      R1WtryyxvDCHmszjNzzchEu1XEY1bEzZwnAzDCQlRWOEyU9+idF3hNdfvLBzDkjJ/Ow0C6sl
      +tIJPM8j3ZenXKrgJlO0amXS+UEa9TJHDuT5xS/f4tyr/9rTXQIkXBehOSQMydGT58CvkCoM
      kXQtEgkX7D4GcilWZ8cZPHKOgwMP3pj3cXETCYSeIKFLjp06h2iWSfcPk3BMEokEjUDiui4r
      d8c4cOwCI/2Pvive15FwXYSRxNUFx0+dJWoUyQyMkHAMLn1+GUON8ITB8vQdho9fZLiw87Nq
      EwkXYaawNcGJ02eJ6mtkBkdxbYN8oUB1fYmm4rA0fYeDJ5/lQH6H25yKguPY9OUHkKrGueMH
      WVhe4+ipc8hmkWKtwcLiIo6hMjG7wiuvvIihKE+3AKamJlFUsBMZpm5fwckewC+vEkQKk5OT
      aEpEaOawaBD6DUxr53ekmJ6aRFUkTjLDxK0ruH0jtEpLhEKhVCqScB0isw9beoQtD8PeeR+m
      NnxwkxnGb14lkR+lub5IKDVe+s7rHD92jExhGHPDB9Pe+SWqU5NTaIokmUxz58ZVkv1HaK7N
      E0mNwPdRdYtEpoApGwTNOpazsz5IKZmcnCKKQpKWwdXxBU4dO8TkrSs4uREKaRfXcelLurQE
      lGsR2bT+7WwEx8Rsl6e6BIiJ+abEAojZ18QCiHlq2Hy4HdA+kOMbnjr6VHeDxjz9fPT2v6SG
      RbZ/lFOjBRTD4uqlzzj/7PMQ+RhWgus3x6jXy6TTSZ45f556cYG//MlPGTlxhoPDo5x/wIlD
      2yEWQMwTpRVGvPDGd3n3Vz+nNq9xY7ZCSvc5cmiQv/yrNxk6fIILJw8TWjbqxmBusxXiJpIs
      3L1DJjf0jeKPq0AxTxRVRHz24fv0D42wsOaRz6QYGeyn1owYGBzi+WfPo0YNiHxWixUAUskE
      Xr1C6LfPT/smxN2gMU8NjWYDx3YQUcDYnTsEkSQ/OMJQ4fEHOGMBxOxr/n+0YNmZLBbnCAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='5. Difference(Index vs YOY)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Index (3)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      XAoCyWP0/wNfoOai7eXw2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
